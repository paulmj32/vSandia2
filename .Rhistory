axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
# Annual outage hours - zoom
county_zoom_list = c("TX", "LA", "MS", "AL", "FL", "GA", "SC", "NC", "VA")
county_zoom = get_acs(geography = "county", state = county_zoom_list,
variables=c("B01003_001"), year = 2019, geometry = TRUE,
cache_table = TRUE) %>%
mutate(POPULATION = estimate) %>%
dplyr::select(GEOID, NAME) %>%
st_transform(5070)
hr_zoom = county_zoom %>%
left_join(hrs, by = c("GEOID"))
gg3 = ggplot()+
geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages \n-- Hurricanes --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
# Annual outage hours - zoom
county_zoom_list = c("TX", "LA", "MS", "AL", "FL", "GA", "SC", "NC", "VA", "TN", "AR")
county_zoom = get_acs(geography = "county", state = county_zoom_list,
variables=c("B01003_001"), year = 2019, geometry = TRUE,
cache_table = TRUE) %>%
mutate(POPULATION = estimate) %>%
dplyr::select(GEOID, NAME) %>%
st_transform(5070)
hr_zoom = county_zoom %>%
left_join(hrs, by = c("GEOID"))
gg3 = ggplot()+
geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages \n-- Hurricanes --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
county_zoom_list = c("TX", "LA", "MS", "AL", "FL", "GA", "SC", "NC", "VA")
county_zoom = get_acs(geography = "county", state = county_zoom_list,
variables=c("B01003_001"), year = 2019, geometry = TRUE,
cache_table = TRUE) %>%
mutate(POPULATION = estimate) %>%
dplyr::select(GEOID, NAME) %>%
st_transform(5070)
hr_zoom = county_zoom %>%
left_join(hrs, by = c("GEOID"))
gg3 = ggplot()+
geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages \n-- Hurricanes --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
county_zoom_list = c("TX", "LA", "MS", "AL", "FL", "GA", "SC", "NC", "VA")
county_zoom = get_acs(geography = "county", state = county_zoom_list,
variables=c("B01003_001"), year = 2019, geometry = TRUE,
cache_table = TRUE) %>%
mutate(POPULATION = estimate) %>%
dplyr::select(GEOID, NAME) %>%
st_transform(5070)
hr_zoom = county_zoom %>%
left_join(hrs, by = c("GEOID"))
gg3 = ggplot()+
geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages \n-- Hurricanes (2015 - 2019) --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
# Hurricane exposure
hurricane_exposure = county_wind(counties = c(county_list), start_year = 2015, end_year = 2019, wind_limit = 0.01)
?county_wind
# Hurricane exposure
hurricane_exposure = county_wind(counties = as.vector(county_map_proj$GEOID), start_year = 2015, end_year = 2019, wind_limit = 0.01)
hurricane_group = hurricane_exposure %>%
group_by(fips) %>%
summarize(avg_sust_spd = mean(vmax_sust), avg_gust_spd = mean(vmax_gust), avg_sust_hrs = mean(sust_dur), avg_gust_hrs = mean(gust_dur))
View(hurricane_group)
hr_map = county_map_proj %>%
left_join(hrs, by = c("GEOID")) %>%
left_join(hurricane_group, by = c("GEOID"))
hr_map = county_map_proj %>%
left_join(hrs, by = c("GEOID")) %>%
left_join(hurricane_group, by = c("GEOID" = "fips"))
gg3 = ggplot()+
geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
# Hurricane exposure
hurricane_exposure = county_wind(counties = as.vector(county_map_proj$GEOID),
start_year = 2015, end_year = 2019)
# Hurricane exposure
hurricane_exposure = county_wind(counties = as.vector(county_map_proj$GEOID),
start_year = 2015, end_year = 2019, wind_limit = 17.4)
hurricane_group = hurricane_exposure %>%
group_by(fips) %>%
summarize(avg_sust_spd = mean(vmax_sust), avg_gust_spd = mean(vmax_gust), avg_sust_hrs = mean(sust_dur), avg_gust_hrs = mean(gust_dur))
# Annual outage hours - all US
hrs = df_data %>%
dplyr::select(GEOID, ln_hrs) %>%
mutate(annual_hrs = exp(ln_hrs) / 5) %>%
group_by(GEOID) %>%
summarise(Hours = sum(annual_hrs))
hr_map = county_map_proj %>%
left_join(hrs, by = c("GEOID")) %>%
left_join(hurricane_group, by = c("GEOID" = "fips"))
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
View(hurricane_exposure)
gg3 = ggplot()+
geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Mean Wind Gust (2015 - 2019)\n-- Hurricanes --", fill = "m/s") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Mean Wind Gust (2015 - 2019)\n-- Hurricanes --", fill = "m/s") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Mean Wind Gust (2015 - 2019)\n-- Hurricanes --", fill = "Speed/n(m/s)") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Mean Wind Gust (2015 - 2019)\n-- Hurricanes --", fill = "Speed\n(m/s)") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
hr_zoom = county_zoom %>%
left_join(hrs, by = c("GEOID")) %>%
left_join(hurricane_group, by = c("GEOID" = "fips"))
gg3 = ggplot()+
#geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Mean Wind Gust (2015 - 2019)\n-- Hurricanes --", fill = "Speed\n(m/s)") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
geom_sf(data = hr_zoom, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Mean Wind Gust (2015 - 2019)\n-- Hurricanes --", fill = "Speed\n(m/s)") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
geom_sf(data = hr_zoom, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Max Wind Gusts (2015 - 2019)\n-- Hurricanes --", fill = "Avg Speed\n(m/s)") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Max Wind Gust (2015 - 2019)\n-- Hurricanes --", fill = "Avg Speed\n(m/s)") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = avg_gust_spd), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Max Wind Gusts (2015 - 2019)\n-- Hurricanes --", fill = "Avg Speed\n(m/s)") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
hurricane_group = hurricane_exposure %>%
group_by(fips) %>%
summarize(avg_sust_spd = mean(vmax_sust), avg_gust_spd = mean(vmax_gust), sum_sust_hrs = sum(sust_dur), sum_gust_hrs = sum(gust_dur))
# Annual outage hours - all US
hrs = df_data %>%
dplyr::select(GEOID, ln_hrs) %>%
mutate(annual_hrs = exp(ln_hrs) / 5) %>%
group_by(GEOID) %>%
summarise(Hours = sum(annual_hrs))
hr_map = county_map_proj %>%
left_join(hrs, by = c("GEOID")) %>%
left_join(hurricane_group, by = c("GEOID" = "fips"))
hurricane_group = hurricane_exposure %>%
group_by(fips) %>%
summarize(avg_sust_spd = mean(vmax_sust), avg_gust_spd = mean(vmax_gust), sum_sust_hrs = sum(sust_dur) / 60, sum_gust_hrs = sum(gust_dur) / 60)
# Annual outage hours - all US
hrs = df_data %>%
dplyr::select(GEOID, ln_hrs) %>%
mutate(annual_hrs = exp(ln_hrs) / 5) %>%
group_by(GEOID) %>%
summarise(Hours = sum(annual_hrs))
hr_map = county_map_proj %>%
left_join(hrs, by = c("GEOID")) %>%
left_join(hurricane_group, by = c("GEOID" = "fips"))
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = sum_sust_hrs), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Duration Sustained Winds > 20 m/s (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = sum_sust_hrs), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Duration Sustained Winds > 20 m/s\n-- Hurricanes 2015-2019 --", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = sum_sust_hrs), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Annual Power Outages (2015 - 2019)\n-- Hurricanes --", fill = "Hours") +
labs(title = "Duration Sustained Winds > 20 m/s\nHurricanes (2015-2019)", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
# Annual outage hours - all US
hrs = df_data %>%
dplyr::select(GEOID, ln_hrs) %>%
mutate(total_hrs = exp(ln_hrs)) %>%
group_by(GEOID) %>%
summarise(Hours = sum(annual_hrs))
# Annual outage hours - all US
hrs = df_data %>%
dplyr::select(GEOID, ln_hrs) %>%
mutate(hrs = exp(ln_hrs)) %>%
group_by(GEOID) %>%
summarise(Hours = sum(hrs))
hr_map = county_map_proj %>%
left_join(hrs, by = c("GEOID")) %>%
left_join(hurricane_group, by = c("GEOID" = "fips"))
gg3 = ggplot()+
geom_sf(data = hr_map, aes(fill = Hours), color = NA) +
#geom_sf(data = hr_map, aes(fill = sum_sust_hrs), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_map_proj, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Power Outages\nHurricanes (2015 - 2019)", fill = "Hours") +
#labs(title = "Duration Sustained Winds > 20 m/s\nHurricanes (2015-2019)", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
# Annual outage hours - zoom
county_zoom_list = c("TX", "LA", "MS", "AL", "FL", "GA", "SC", "NC", "VA")
county_zoom = get_acs(geography = "county", state = county_zoom_list,
variables=c("B01003_001"), year = 2019, geometry = TRUE,
cache_table = TRUE) %>%
mutate(POPULATION = estimate) %>%
dplyr::select(GEOID, NAME) %>%
st_transform(5070)
hr_zoom = county_zoom %>%
left_join(hrs, by = c("GEOID")) %>%
left_join(hurricane_group, by = c("GEOID" = "fips"))
gg3 = ggplot()+
geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
#geom_sf(data = hr_map, aes(fill = sum_sust_hrs), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
labs(title = "Power Outages\nHurricanes (2015 - 2019)", fill = "Hours") +
#labs(title = "Duration Sustained Winds > 20 m/s\nHurricanes (2015-2019)", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
geom_sf(data = hr_map, aes(fill = sum_sust_hrs), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Power Outages\nHurricanes (2015 - 2019)", fill = "Hours") +
labs(title = "Duration Sustained Winds > 20 m/s\nHurricanes (2015-2019)", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
gg3 = ggplot()+
#geom_sf(data = hr_zoom, aes(fill = Hours), color = NA) +
geom_sf(data = hr_zoom, aes(fill = sum_sust_hrs), color = NA) +
scale_fill_viridis_c(option="plasma", na.value = "grey30") +
geom_sf(data = county_zoom, fill = NA, color = "black", lwd = 0.1) +
theme_dark() +
#labs(title = "Power Outages\nHurricanes (2015 - 2019)", fill = "Hours") +
labs(title = "Duration Sustained Winds > 20 m/s\nHurricanes (2015-2019)", fill = "Hours") +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
print(gg3)
save.image("~/vSandia2/Data/DeepDive/hurricane_hrs.RData")
install.packages("gstat")
##########################################################################################################
##### CHECK MODEL ASSUMPTIONS  ###########################################################################
##########################################################################################################
res_xgb = as.vector(xgb_predictions$.pred) - y_test
res_lre = as.vector(lre_predictions$.pred) - y_test
# Normality of residuals
qqnorm(res_xgb)
# Normality of residuals
qqnorm(res_xgb)
qqline(res_xgb)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
#### Machine learning
library(tidyverse)
library(tidymodels)
library(sf)
library(parallel)
library(doParallel)
library(xgboost)
library(vip)
library(spdep)
library(spatialreg)
library(pdp)
# library(drat)
# addRepo("geanders")
# install.packages("hurricaneexposuredata")
library(hurricaneexposuredata)
library(hurricaneexposure)
library(tidycensus)
library(gstat)
library(ggpubr)
load("~/vSandia2/Data/DeepDive/hurricane_hrs.RData")
##########################################################################################################
##### CHECK MODEL ASSUMPTIONS  ###########################################################################
##########################################################################################################
# http://www.sthda.com/english/wiki/normality-test-in-r
# Residuals
res_xgb = as.vector(xgb_predictions$.pred) - y_test
res_lre = as.vector(lre_predictions$.pred) - y_test
?qqPlot
shapiro.test(res_xgb)
# Normality of residuals
qqnorm(res_xgb)
qqline(res_xgb)
shapiro.test(res_xgb)
?plot
res = res_xgb
# Heteroskedacity of residuals
fitted = as.vector(xgb_predictions$.pred)
plot(fitted, res_xgb)
# Spatial dependency of residuals
rr = data.frame(as.factor(df_data$GEOID))
rr$res = res
# Spatial dependency of residuals
rr = data.frame(as.factor(df_test$GEOID))
rr$res = res
colnames(rr) = c("GEOID", "resid")
plot(rr) # looks good but use varigoram below to confirm
county_centroid = st_centroid(county_map_proj) # get center of counties
county_lonlat = county_centroid %>%
mutate(X = unlist(map(county_centroid$geometry,1)),
Y = unlist(map(county_centroid$geometry,2))) %>%
dplyr::select(-NAME, -POPULATION) %>%
inner_join(rr, by = c("GEOID")) %>%
rename(Z = resid)
county_lonlat_sp = as_Spatial(county_lonlat)
vgram = variogram(Z~1, county_lonlat_sp)
plot(vgram)
?variogram
2E05
200000
200
save.image("~/vSandia2/Data/DeepDive/hurricane_hrs.RData")
# Normality of residuals
# http://www.sthda.com/english/wiki/normality-test-in-r
qqnorm(res)
qqline(res)
# Heteroskedacity of residuals
fitted = as.vector(xgb_predictions$.pred)
plot(fitted, res_xgb)
plot(vgram)
